{"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment","link":"/2022/09/06/hello-world/"},{"title":"Music Record - ACG OST","text":"INCOMPLETE! This is a record for part of my music, most of which are from ACG OST (Original Soundtracks) from Japanese. I have spent quite a few time to collect, organize and rate these music and it really bothered me twice to lose my record for them. Also, I’ve been putting quite a bit of energy and time configuring foobar2000 to make it convenient to use. Finally I managed to find a great way to keep a record backup of my music so that I am no longer afraid of migrating to another PC or lose my record by accident, and I decide to write an article to keep a record for both my usage of foobar2000 and my music record. TODO","link":"/2022/09/11/music-record/"},{"title":"Miscellaneous Notes","text":"Miscellaneous notes during the use of this blog. This is a personal notes that keeps track of all procedure, problems, tricks, etc. during the building and writing process of this blog. Hopes it will help someone, at least me, when I’d like to migrate to another blog or unfortunately I have to re-build my blog. Building NotesInstalling hexo is quite simple: just install it through npm. At 2022-09-06, the newest version of hexo is fully compatible with my workaround: Windows 11 + WSL 2 Ubuntu 20.04 LTS Node.js v18.x To install Node.js on Ubuntu, follow the official guide of installing Node.js binary distribution, where the commands are already included below. shell123curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -sudo apt-get install -y nodejsnpm install -g hexo-cli Initialize a Blog RepositoryFollowing the hexo official guide, run shell123hexo init &lt;folder&gt;cd &lt;folder&gt;npm install Personally, I put my blog folder just in ~/fallcicada.github.io/, which is put in github repo fallcicada.github.io. Customization in BlogAs often mentioned in Chinese SNS, the end of customization is the default. I do not want to put much focus on the customization part of the blog. Except for a clean hexo theme Icarus, I only uses a few additional plugins which are essential in building my blog, currently only including hexo-pdf. Hexo Theme IcarusTo install hexo theme Icarus, follow its Readme or its guide. Some possible dependencies should also be installed together. 12npm install -S hexo-theme-icarus hexo-renderer-infernohexo config theme icarus This will automatically modify your _config.yml, and will also create another theme-specific configuration file _config.icarus.yml at the same directory. Unlisted configuration is kept the same as default. The highlight config should be carefully checked, as I have met several bugs due to inappropriate settings under this part. To ensure that 2 enters break a line rather than 1 enter, set marked.gfm: true in the config file, as in 回车就是换行和预览不一致异常问题. _config.yml >folded123456789101112131415161718192021222324252627# Basic Informationtitle: FallCicada's Blogsubtitle: ''suffix: FallCicadadescription: FallCicada's Personal Blogkeywords: - FallCicada - Blogauthor: FallCicadalanguage: entimezone: America/Los_Angelesurl: 'https://fallcicada.github.io/'highlight: enable: true line_number: true auto_detect: false tab_replace: marked: gfm: true pedantic: false sanitize: false tables: true breaks: false smartLists: true smartypants: true modifyAnchors: '' autolink: true As for Icarus-specific config, I removed a lot of unnecessary component, as noted below. Additionally, the logo, or any other image that needs to be placed in the website template, should be put in directory &lt;icarus directory&gt;/source/img/xxx, and be indexed as /img/xxx in config file. The directory of Icarus, installed directly through npm, should be &lt;blog directory&gt;/node_modules/hexo-theme-icarus. But there exists some bugs when the blog is deployed with Github Action. As a result, I manually moved Icarus from &lt;blog directory&gt;/node_modules/hexo-theme-icarus to &lt;blog directory&gt;/themes/icarus, which resolves most of the issues. _config.icarus.yml >folded123456789101112131415161718192021222324252627282930# Modified configlogo: /img/kaltsit_sticker.pnghead.favicon: /img/kaltsit_sticker.pngnavbar.links.My GitHub.url: https://github.com/FallCicadasidebar.left.sticky: trueplugins.katex: true# Commented out confighead.manifesthead.open_graphhead.structured_datahead.rsscommentdonatewidgets.profile.author_titlewidgets.profile.social_linkswidgets.linkswidgets.categorieswidgets.subscribe_emailwidgets.adsensewidgets.followitplugins.baidu_analyticsplugins.bing_webmasterplugins.busuanziplugins.cnzzplugins.cookie_consentplugins.google_analyticsplugins.hotjarplugins.statcounterplugins.twitter_conversion_tracking Page LayoutTo modify the page layout, follow the layout guide of Icarus theme. Personally, I modified the &lt;icarus_directory&gt;/layout/layout.jsx and &lt;icarus_directory&gt;/common/widgets.jsx to have a narrower widget column and wider content column. /layout/layout.jsx123456789 &lt;div class={classname({ column: true, 'order-2': true, 'column-main': true, 'is-12': columnCount === 1,- 'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2,- 'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3+ 'is-8-tablet is-9-desktop is-9-widescreen': columnCount === 2,+ 'is-8-tablet is-9-desktop is-7-widescreen': columnCount === 3 /layout/common/widgets.jsx1234567891011 function getColumnSizeClass(columnCount) { switch (columnCount) { case 2:- return 'is-4-tablet is-4-desktop is-4-widescreen';+ return 'is-3-tablet is-3-desktop is-3-widescreen'; case 3:- return 'is-4-tablet is-4-desktop is-3-widescreen';+ return 'is-3-tablet is-3-desktop is-2-widescreen'; } return ''; } As Icarus uses the 12 columns system of bulma, the total width of the same type needs sum up to 12. For example, the modification above makes the width of widget column and content column in double-column desktop mode from 4:8 to 3:9. Additional PluginsCurrently I am only installing hexo plugin hexo-pdf for rendering my CV, which could be installed by npm install --save hexo-pdf. It supports both external links and relative file path with the pdf file placed locally. Note that when referring to a local pdf file, the root directory for its path is the same as the root directory of the markdown file. For example, the following formats are all valid: 123{% pdf https://blablabla/test.pdf %}{% pdf https://drive.google.com/file/d/xxxx/preview %}{% pdf /&lt;path&gt;/test.pdf %} Writing BlogI am simply using VSCode + Markdown to write my blog. That’s the easiest but most effecient way for me. Deploying BlogI used Github Action to deploy my blog automatically after pushed to the main branch of my Github repo. The raw contents of my blog is pushed to the main branch of the repo, except the public/ folder not uploaded. An additional file .github/workflows/pages.yml is needed which describes what to do under what situation for Github Action. I used an almost the same file as this provided by hexo, except for the version of Node.js. The above content is completely sufficient for automatic deploy of hexo blog. For more detailed introduction of how Github Action works, refer to here. TODO More styles Keep a note of my first CD ripping experience. Upload most of my undergraduate course materials to Github. Planning to add some stickers to my blog. It is worth to try to find a way like pattern matching and replacing to save the time of manually adding stickers in in-line form in my blog. Move my personal note from local onto the blog might be a good choice. Keep a diary, or weekly diary? Something like that might not be a bad choice. No other plans? I think the above plans are enough for a short-term workload, lol.","link":"/2022/09/10/misc-note/"},{"title":"Blog Writing Notes","text":"This is some notes during my blog-writing procedure. I will keep some interesting tricks, plugins, or tools inside this notes. Post TemplatesHexo guide Bulma活用 Bulma 美化 Icarus 文章 Tag PluginsTag Plugins","link":"/2022/09/10/blog-writing-notes/"},{"title":"CD Ripping Experience Share","text":"As a game soundtrack collector and one who often listen to those music on CDs, it’s almost impossible to keep replacing CD from CD drive every an hour while listening. From the perspective of convenience in either music listening, management, storing, or sharing, it is really necessary to rip music from those CDs. This is a personal note for my CD ripping experience. I think it is worth of a post, at least the equipments which cost me several hundreds of dollars are worth of it (laugh). Preparation for CD RippingEquipmentsTo start with CD ripping, you should at least have a CD drive, undoubtedly. My personal equipments for CD ripping is somewhat bottommost hardware, considering I am just a newbie in CD ripping: Gotega External DVD Drive, USB 3.0 Portable CD/DVD Epson Perfection V39 Scanner During the ripping, I felt these following are also quite necessary: Disposable latex gloves Screen cleaner spray or wipes Normal wet wipes These really helps prevent grease or dirt adhering to the CD, booklet, or the screen of the scanner. Afterall, nobody likes some fingerprints to present on the scan of the CD and the booklet. Wearing a latex glove on one hand really helps to prevent this, or just wash your hands carefully with plenty of hand soups before CD ripping and scanning. SoftwareThe most important software, which rips music from CD, is EAC. The following of this article assumes using EAC v1.6. Installing EAC is a seemingly long and complicated procedure. Keep in mind that you need musics with best quality, and choose the corresponding configuration during the installation helps reduce most of the problems. After installation, go to EAC - EAC options, set both of the following to high: Extraction - Extraction and compression priority Extraction - Error recovery quality And check the box in Tools - Automatically write status report after extraction Tools - Append checksum to status report For a detailed installation guide, click here (sadly this guide is only available in Chinese). As for the scanner, simply install the driver and softward provided by its brand, because the software of scanner among different brands also differs much. CD RippingRipping ProcedureFor CD ripping, I roughly split it into multiple steps: Open EAC, insert the disc, and the music information will appear in the window. If necessary, click on second icon from the right (which is on the right side of Eject button) to search for CD information from database. It is possible to switch from different databases by clicking the select box next to the CD icon. If you decide to manually enter the CD information after ripping (for example, when detailed information is provided in the booklet of CD), you might skip this step. Click on Action - Detect Gaps, wait until gap detection finishes. Click on Action - Test &amp; Copy Image &amp; Create CUE Sheet, choose whatever of compressed (flac) or uncompressed (wav) based on your preference. Then choose a path of saving the ripped file, wait until ripping finished. Check the ripping log and listen to the audio to ensure no problem happens. Then you have a ripped CD! Remember to put your CD back to the box. After RippingThere are, actually, some post-works to be done. These works are often ignored and I have seen quite frequently that someone shared their CD with a CUE sheet in unknown encodings which caused inconvenience. Open your CUE sheet (the file ending with .cue suffix) with an appropriate editor, like VSCode or some other ones that supports you change the encoding of file. Check the encoding of your CUE sheet. In VSCode, it is at the bottom of the window. If your CUE sheet seems to contain a lot of corrupted characters, it is very probably that you opened the file in a wrong format. It everything seems to be OK, jump to step 4. Click on the encoding, select Reopen with Encoding, then select the first encoding which has a Guessed from content after it. Re-check if the CUE sheet looks OK with the new encoding. If problem still exists, check the following encodings, which are common in my personal experience: Simplified Chinese (GB 2312) Japanese (Shift JIS) Simplified Chinese (GBK) UTF-16 LE UTF-16 BE If the encoding of your CUE sheet is not in UTF-8, click on the encoding, select Save with encoding, then select UTF-8 to save your file in appropriate encoding format. Do this again to your log file. If you wish to share the CD in online platform, remove the personal information, like anonymize your file save path, in your log file. If you are not satisfied with the CD information found on the online databases, you can manually enter the information in your CUE sheet. The format of CUE sheet can be found here. My personal practice of CUE sheet formatting is to make a CUE sheet like this: Some Album DISC 1.cue12345678910111213REM DATE 2022/09/10REM DISCID xxxxxxxxPERFORMER &quot;Some Brand&quot;TITLE &quot;Some Album DISC 1&quot;FILE &quot;Some Album DISC 1.wav&quot; WAVE TRACK 01 AUDIO TITLE &quot;Some Song&quot; PERFORMER &quot;Some Singer&quot; INDEX 01 00:00:00 TRACK 02 AUDIO TITLE &quot;Some Other Song&quot; PERFORMER &quot;Some Other Singer&quot;... Where I mainly removed the remark of EAC version, and edit performer if it does not correspond to what appears on the booklet. I’m also used to name the audio file to {ALBUM_NAME} DISC {DISC_NUMBER}.wav, even if the album only have 1 disc. After all these long steps, you finally have a fully prepared ripped CD. Now put it to your music player, and enjoy it! ScanningTo be finished. CD Management and ArchivingTo be finished.","link":"/2022/09/11/cd-rip/"}],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","link":"/tags/Miscellaneous/"},{"name":"Notes","slug":"Notes","link":"/tags/Notes/"},{"name":"Music","slug":"Music","link":"/tags/Music/"},{"name":"ACG","slug":"ACG","link":"/tags/ACG/"},{"name":"OST","slug":"OST","link":"/tags/OST/"},{"name":"Record","slug":"Record","link":"/tags/Record/"},{"name":"Technical","slug":"Technical","link":"/tags/Technical/"}],"categories":[{"name":"Miscellaneous","slug":"Miscellaneous","link":"/categories/Miscellaneous/"},{"name":"Music","slug":"Music","link":"/categories/Music/"}],"pages":[{"title":"About","text":"This page contains only my Github page and my CV! I will find another time to complete this page. Personal CV","link":"/about/index.html"},{"title":"文章分类","text":"","link":"/categories/index.html"}]}